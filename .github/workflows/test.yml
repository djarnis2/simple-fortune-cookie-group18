name: 03automation
on: push
env:
  docker_username: ${{ github.repository_owner }}
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Build-and-Test: 
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.16"

      - name: Build backend
        run: | 
          cd backend
          go build 

      - name: Build Frontend
        run: |
          cd frontend
          go build

      - name: Run frontend tests
        run: |
          cd frontend
          go test ./... -v
          
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build-and-Test]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Login to GHCR
        run: echo "${{ env.docker_password }}" | docker login ghcr.io -u ${{ env.docker_username }} --password-stdin
      
      - name: build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ env.docker_username }}/simple-fortune-cookie-group18-backend:latest
      
      - name: build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ env.docker_username }}/simple-fortune-cookie-group18-frontend:latest
  Kubernetes-secrets:
    runs-on: ubuntu-latest
    needs: [Docker-image]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      
      - name: Deploy to Kubernetes
        run: |
          kubectl --kubeconfig kubeconfig apply -f backend-deployment.yaml
          kubectl --kubeconfig kubeconfig apply -f backend-service.yaml
          kubectl --kubeconfig kubeconfig apply -f frontend-deployment.yaml
          kubectl --kubeconfig kubeconfig apply -f frontend-service.yaml
      
      
        
